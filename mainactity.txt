package id.web.ariefatkhur.smarthome

import android.content.BroadcastReceiver
import android.content.Context
import android.content.Intent
import android.content.IntentFilter
import android.os.Bundle
import android.os.Handler
import android.view.View
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity
import androidx.localbroadcastmanager.content.LocalBroadcastManager
import com.google.firebase.messaging.FirebaseMessaging
import com.google.firebase.messaging.RemoteMessage
import kotlinx.android.synthetic.main.activity_main.*


class MainActivity : AppCompatActivity() {
    var messageId = 1
    var lamp_on = booleanArrayOf(true, true)
    var lamp_auto = booleanArrayOf(true, true)

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
        LocalBroadcastManager.getInstance(this).registerReceiver((mMessageReceiver),
            IntentFilter("MyData")
        )

        window.decorView.setOnSystemUiVisibilityChangeListener { visibility ->
            // Note that system bars will only be "visible" if none of the
            // LOW_PROFILE, HIDE_NAVIGATION, or FULLSCREEN flags are set.
            if (visibility and View.SYSTEM_UI_FLAG_FULLSCREEN == 0) {
                // TODO: The system bars are visible. Make any desired
                // adjustments to your UI, such as showing the action bar or
                // other navigational controls.
                Handler().postDelayed(Runnable{
                    hideSystemUI()
                }, 3000)
            } else {
                // TODO: The system bars are NOT visible. Make any desired
                // adjustments to your UI, such as hiding the action bar or
                // other navigational controls.
            }
        }

        lamp1.setOnClickListener {
            val fm = FirebaseMessaging.getInstance()
            var data = "1"
            if(lamp_on[0] == true) data = "0"
            fm.send(
                RemoteMessage.Builder("1033717887699@fcm.googleapis.com")
                    .setMessageId(Integer.toString(messageId))
                    .addData("action", "lampu")
                    .addData("index", "0")
                    .addData("data", data)
                    .build())

            ++messageId
        }

        lamp2.setOnClickListener {
            val fm = FirebaseMessaging.getInstance()
            var data = "1"
            if(lamp_on[1] == true) data = "0"
            fm.send(
                RemoteMessage.Builder("1033717887699@fcm.googleapis.com") //server id
                    .setMessageId(Integer.toString(messageId))
                    .addData("action", "lampu")
                    .addData("index", "1")
                    .addData("data", data)
                    .build())

            ++messageId
        }

        auto1.setOnClickListener {
            val fm = FirebaseMessaging.getInstance()
            var data = "1"
            if(lamp_auto[0] == true) data = "0"
            fm.send(
                RemoteMessage.Builder("1033717887699@fcm.googleapis.com")
                    .setMessageId(Integer.toString(messageId))
                    .addData("action", "set_auto")
                    .addData("index", "0")
                    .addData("data", data)
                    .build())

            ++messageId
        }

        auto2.setOnClickListener {
            val fm = FirebaseMessaging.getInstance()
            var data = "1"
            if(lamp_auto[1] == true) data = "0"
            fm.send(
                RemoteMessage.Builder("1033717887699@fcm.googleapis.com")
                    .setMessageId(Integer.toString(messageId))
                    .addData("action", "set_auto")
                    .addData("index", "1")
                    .addData("data", data)
                    .build())

            ++messageId
        }
    }

    override fun onDestroy() {
        super.onDestroy()
        LocalBroadcastManager.getInstance(this).unregisterReceiver(mMessageReceiver)
    }

    override fun onWindowFocusChanged(hasFocus: Boolean) {
        super.onWindowFocusChanged(hasFocus)
        if (hasFocus) hideSystemUI()
    }

    private fun hideSystemUI() {
        // Enables regular immersive mode.
        // For "lean back" mode, remove SYSTEM_UI_FLAG_IMMERSIVE.
        // Or for "sticky immersive," replace it with SYSTEM_UI_FLAG_IMMERSIVE_STICKY
        window.decorView.systemUiVisibility = (View.SYSTEM_UI_FLAG_IMMERSIVE
                // Set the content to appear under the system bars so that the
                // content doesn't resize when the system bars hide and show.
                or View.SYSTEM_UI_FLAG_LAYOUT_STABLE
                or View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION
                or View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN
                // Hide the nav bar and status bar
                or View.SYSTEM_UI_FLAG_HIDE_NAVIGATION
                or View.SYSTEM_UI_FLAG_FULLSCREEN)
    }


    private val mMessageReceiver: BroadcastReceiver = object : BroadcastReceiver() {
        override fun onReceive(context: Context?, intent: Intent) {
            val action = intent.getStringExtra("action")
            val index = intent.getStringExtra("index")
            val data = intent.getStringExtra("data")
            val status = intent.getStringExtra("status")

            runOnUiThread {

                if(status == "true"){
                    if(action == "set_auto"){
                        if(index == "0"){
                            if(data == "0") {
                                lamp_auto[0] = false
                                auto1.text = "Auto Off"
                            }
                            else {
                                lamp_auto[0] = true
                                auto1.text = "Auto On"
                            }
                        } else {
                            if(data == "0") {
                                lamp_auto[1] = false
                                auto2.text = "Auto Off"
                            }
                            else {
                                lamp_auto[1] = true
                                auto2.text = "Auto On"
                            }
                        }
                    } else if(action == "lampu") {
                        if(index == "0"){
                            if(data == "0") {
                                lamp_on[0] = false
                                lamp1.setImageResource(R.drawable.circle_off)
                            }
                            else {
                                lamp_on[0] = true
                                lamp1.setImageResource(R.drawable.circle_on)
                            }
                        } else {
                            if(data == "0") {
                                lamp_on[1] = false
                                lamp2.setImageResource(R.drawable.circle_off)
                            }
                            else {
                                lamp_on[1] = true
                                lamp2.setImageResource(R.drawable.circle_on)
                            }
                        }
                    }
                } else {
                    Toast.makeText(this@MainActivity, "Operasi gagal.", Toast.LENGTH_SHORT).show()
                }
            }
        }
    }
}
